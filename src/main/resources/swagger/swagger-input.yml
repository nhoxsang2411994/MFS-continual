swagger: "2.0"
info:
  description: >-
    A mini file sharing CRUD adapter.
  version: 1.0.0
  title: Mini File Sharing
host: localhost
basePath: /v1
tags:
- name: Registered User
  description: CRUD operations for registered users
schemes:
- https
- http
#consumes:
#- application/octet-stream
#- application/json
#- application/pdf
#- application/zip
#- application/vnd.openxmlformats-officedocument.wordprocessingml.document
#- application/vnd.oasis.opendocument.text
#- image/png
#- image/gif
#- image/jpeg
#- video/mpeg
#- audio/mpeg
#- audio/ogg
#- text/plain
produces:
- application/octet-stream
- application/json
- application/pdf
- application/zip
- application/vnd.openxmlformats-officedocument.wordprocessingml.document
- application/vnd.oasis.opendocument.text
- image/png
- image/gif
- image/jpeg
- video/mpeg
- audio/mpeg
- audio/ogg
- text/plain
definitions:
  UserFile:
    type: object
    properties:
      fileId:
        type: string
        format: uuid
        readOnly: true
        description: The file's id.
      fileName:
        type: string
        minLength: 1
        maxLength: 100
        pattern: "^[\\w\\-. ]+$"
        description: The name of the file, e.g., 'text.txt'.
      size:
        type: integer
        # nullable: false # not supported in Swagger 2.0
        # minimum: 1
        # maximum: 20480
        format: int64
        readOnly: true
        description: The file's size, in bytes.
      # uploadedPath:
      #   type: string
      #   description: The location where the file is stored.
      fileCategory:
        $ref: '#/definitions/Category'
      uploaderId:
        type: string
        format: uuid
        readOnly: true
        description: The id of this file's uploader.
    required:
    - fileName
  Comment:
    type: object
    properties:
      commentatorId:
        type: string
        format: uuid
        description: commentator id
        readOnly: true
      username:
        type: string
        minLength: 3
        maxLength: 15
        pattern: "^[\\w\\- ]+$"
        description: The name that will be used to display on the website.
        readOnly: true
      comment:
        type: string
        minLength: 20
        maxLength: 200
        description: the comment of user.
    required:
    - comment
  Category:
    type: string
    enum: &CATEGORY
    - audio
    - image
    - text
    - video
    - application
    - unclassified
    description: >
      File categories:
       * application - Archives, e.g., zip, rar.
       * audio - Audio files, e.g., mp3, ogg, flac, wav.
       * image - Images, e.g., png, jpeg, gif, jpg.
       * text - Text files, e.g., txt, doc, docx, json, pdf, epub.
       * video - Videos, e.g., mp4, wmv, mov, avi, flv.
       * unclassified - unclassified files.
  # User:
  #   type: object
  #   properties:
  #     userId:
  #       type: string
  #       format: uuid
  #       readOnly: true
  #       description: The id of the user.
  #     username:
  #       type: string
  #       minLength: 3
  #       maxLength: 15
  #       pattern: "^[\\w\\- ]+$"
  #       description: The name that will be used to display on the website.
  #       readOnly: true
  #   required:
  #   - email
  #   - accountLevel
paths:
  '/v1/users/{userId}/accountlevel/{maxUpSize}/files/':
    post:
      tags:
      - Registered User
      summary: Upload a file
      description: Allow users to upload a file.
      operationId: upFile
      consumes:
      - multipart/form-data
      - application/octet-stream
      - application/json
      - application/pdf
      - application/zip
      - application/vnd.openxmlformats-officedocument.wordprocessingml.document
      - application/vnd.oasis.opendocument.text
      - image/png
      - image/gif
      - image/jpeg
      - video/mpeg
      - audio/mpeg
      - audio/ogg
      - text/plain
      produces:
      - application/json
      parameters:
      - in: formData
        name: upfile
        type: file
        required: true
        description: The file to upload.
      - in: path
        name: maxUpSize
        required: true
        description: Maximum upload size (in MB).
        type: integer
        format: int32
      - in: path
        name: userId
        type: string
        format: uuid
        required: true
        description: the uploader's id.
      responses:
        '200':
          description:  Uploaded done.
          schema:
            type: string
            format: uuid
        '404':
          description: No files with the provided file name found
        '500':
          description: Internal Server Error
  '/v1/users/accountlevel/{maxDownloadSize}/files/{fileId}':
    get:
      tags:
      - Registered User
      summary: Download a file
      description: Allow users to download a file.
      operationId: downloadFile
      produces:
      - application/octet-stream
      parameters:
      - in: path
        name: maxDownloadSize
        type: integer
        format: int32
        description: Maximum download size (in MB.)
        required: true
      - in: path
        name: fileId
        type: string
        format: uuid
        description: The id of the file needs to be downloaded.
        required: true
      responses:
        '200':
          description:  Download link is ready.
          schema:
            type: string
            format: binary
        '404':
          description: No files with the provided ids found.
        '500':
          description: Internal Server Error
  '/v1/users/{userId}/username/{username}/files/{fileId}':
    post:
      tags:
      - Registered User
      summary: Post a comment
      description: Allow users to post a comment on a file.
      operationId: postComment
      consumes:
      - application/json
      parameters:
      - in: path
        name: userId
        type: string
        format: uuid
        description: The user id.
        required: true
      - in: path
        name: fileId
        description: The file id.
        type: string
        format: uuid
        required: true
      - in: path
        name: username
        description: The commentator's user name
        type: string
        required: true
      - in: body
        name: comment
        description: The content of the comment
        schema:
          $ref: '#/definitions/Comment'
      responses:
        '200':
          description:  Comment posted successfully.
          schema:
            type: string
            format: uuid
        '404':
          description: No files or users with the provided ids found
        '500':
          description: Internal Server Error
  '/v1/users/files/filenames/{fileName}/':
    get:
      tags:
      - Registered User
      summary: Retrieves files by file's name
      description: Retrieves files by a file name
      operationId: readFilesByFileNames
      parameters:
      - in: path
        name: fileName
        type: string
        description: 1 - 100 letters file name
        required: true
      responses:
        '200':
          description: Files to download.
          schema:
            type: array
            items:
              type: string
              format: binary
        '404':
          description: No files with the provided file name found
        '500':
          description: Internal Server Error
  '/v1/users/files/categories/{category}':
    get:
      tags:
      - Registered User
      summary: Retrieves file details by one category
      description: Retrieves files by one category
      operationId: readFilesByCategory
      parameters:
      - in: path
        name: category
        required: true
        type: string
        enum: *CATEGORY
      #   enum: [application, text, video, image, audio, unclassified]
      produces:
      - application/json
      responses:
        '200':
          description:  A list of files.
          schema:
            type: array
            items:
              $ref: '#/definitions/UserFile'
        '404':
          description: No files with the provided category found
        '500':
          description: Internal Server Error
  '/v1/users/files/categories/bulk':
    get:
      tags:
      - Registered User
      summary: Retrieves files by multiple categories
      description: Retrieves files that belong to a list of categories (one file can only belong to one category).
      operationId: readFilesByMultiCategories
      parameters:
      - name: categories
        in: body
        description: 2 - 20 letters list of categories
        required: true
        schema:
          type: array
          items:
            $ref: "#/definitions/Category"
      produces:
      - application/json
      responses:
        '200':
          description:  A list of files.
          schema:
            type: array
            items:
              type: string
              format: binary
        '404':
          description: No files with provided categories found
        '500':
          description: Internal Server Error
  # '/v1/users/{userId}/files/':
  #   get:
  #     tags:
  #     - Registered User
  #     summary: Retrieves files by user's id
  #     description: Retrieves files by userId.
  #     operationId: readFilesByUserId
  #     parameters:
  #     - in: path
  #       name: userId
  #       type: string
  #       description: The id of one uploader. Example '236636a1-0169-caa8-08c4-d30b1a890613'
  #       required: true
  #     produces:
  #     - application/json
  #     responses:
  #       '200':
  #         description:  A list of files.
  #         schema:
  #           type: array
  #           items:
  #             type: string
  #             format: binary
  #       '404':
  #         description: No files with provided categories found
  #       '500':
  #         description: Internal Server Error
  '/v1/users/username/{username}/files':
    get:
      tags:
      - Registered User
      summary: Retrieves files by username
      description: Retrieves files of files uploaded by an user with the given username.
      operationId: readFilesByUsername
      parameters:
      - in: path
        name: username
        type: string
        minLength: 3
        maxLength: 15
        required: true
        pattern: "^[\\w\\- ]+$"
        description: The retrieved file informations belong to files uploaded by an user with this username.
      produces:
      - application/json
      responses:
        '200':
          description:  A list of files.
          schema:
            type: array
            items:
              type: string
              format: binary
        '404':
          description: No files with given username found
        '500':
          description: Internal Server Error
  '/v1/users/files/sizes/{size}/':
    get:
      tags:
      - Registered User
      summary: Retrieves files by size
      description: Retrieves files of files that are smaller than or as large as the given size.
      operationId: readFilesBySize
      parameters:
      - in: path
        name: size
        type: integer
        # minimun: 1
        # maximum: 20480
        format: int32
        required: true
        description: The size of files, in kilobytes.
      produces:
      - application/json
      responses:
        '200':
          description:  A list of files.
          schema:
            type: array
            items:
              type: string
              format: binary
        '404':
          description: No files with given size found
        '500':
          description: Internal Server Error
  '/v1/users/files/info/{fileId}':
    get:
      tags:
      - Registered User
      summary: Retrieves file details by file's id
      description: Retrieves file information of an uploaded file (with comments.)
      operationId: readFileInfo
      parameters:
      - in: path
        name: fileId
        type: string
        format: uuid
        required: true
        description: The id of the uploaded file from which has the information needs to be retrieved.
      produces:
      - application/json
      responses:
        '200':
          description:  Retrieved information successfully.
          schema:
            $ref: "#/definitions/UserFile"
        '404':
          description: No files with given size found
        '500':
          description: Internal Server Error
